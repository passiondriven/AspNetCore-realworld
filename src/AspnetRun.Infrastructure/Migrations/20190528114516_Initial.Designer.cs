// <auto-generated />
using System;
using AspnetRun.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AspnetRun.Infrastructure.Migrations
{
    [DbContext(typeof(AspnetRunContext))]
    [Migration("20190528114516_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AspnetRun.Core.Entities.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("ImageFile");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.Property<string>("Summary");

                    b.HasKey("Id");

                    b.ToTable("Blog");
                });

            modelBuilder.Entity("AspnetRun.Core.Entities.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("AspnetRun.Core.Entities.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CartId");

                    b.Property<string>("Color");

                    b.Property<int>("ProductId");

                    b.Property<int>("Quantity");

                    b.Property<decimal>("TotalPrice");

                    b.Property<decimal>("UnitPrice");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItem");
                });

            modelBuilder.Entity("AspnetRun.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("ImageName");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("AspnetRun.Core.Entities.Compare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Compare");
                });

            modelBuilder.Entity("AspnetRun.Core.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Message")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("AspnetRun.Core.Entities.List", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("ImageFile");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.HasKey("Id");

                    b.ToTable("List");
                });

            modelBuilder.Entity("AspnetRun.Core.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("GrandTotal");

                    b.Property<int>("PaymentMethod");

                    b.Property<int>("Status");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("AspnetRun.Core.Entities.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color");

                    b.Property<int?>("OrderId");

                    b.Property<int>("ProductId");

                    b.Property<int>("Quantity");

                    b.Property<decimal>("TotalPrice");

                    b.Property<decimal>("UnitPrice");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("AspnetRun.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<string>("Description");

                    b.Property<string>("ImageFile");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.Property<string>("Slug");

                    b.Property<double>("Star");

                    b.Property<string>("Summary");

                    b.Property<decimal?>("UnitPrice");

                    b.Property<int?>("UnitsInStock");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("AspnetRun.Core.Entities.ProductCompare", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("CompareId");

                    b.HasKey("ProductId", "CompareId");

                    b.HasIndex("CompareId");

                    b.ToTable("ProductCompare");
                });

            modelBuilder.Entity("AspnetRun.Core.Entities.ProductList", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("ListId");

                    b.HasKey("ProductId", "ListId");

                    b.HasIndex("ListId");

                    b.ToTable("ProductList");
                });

            modelBuilder.Entity("AspnetRun.Core.Entities.ProductWishlist", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("WishlistId");

                    b.HasKey("ProductId", "WishlistId");

                    b.HasIndex("WishlistId");

                    b.ToTable("ProductWishlist");
                });

            modelBuilder.Entity("AspnetRun.Core.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment");

                    b.Property<string>("EMail");

                    b.Property<string>("Name");

                    b.Property<int?>("ProductId");

                    b.Property<double>("Star");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("AspnetRun.Core.Entities.Specification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int?>("ProductId");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Specification");
                });

            modelBuilder.Entity("AspnetRun.Core.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int?>("ProductId");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("AspnetRun.Core.Entities.Wishlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Wishlist");
                });

            modelBuilder.Entity("AspnetRun.Core.Entities.CartItem", b =>
                {
                    b.HasOne("AspnetRun.Core.Entities.Cart")
                        .WithMany("Items")
                        .HasForeignKey("CartId");

                    b.HasOne("AspnetRun.Core.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AspnetRun.Core.Entities.Order", b =>
                {
                    b.OwnsOne("AspnetRun.Core.Entities.Address", "BillingAddress", b1 =>
                        {
                            b1.Property<int>("OrderId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("AddressLine");

                            b1.Property<string>("City");

                            b1.Property<string>("CompanyName");

                            b1.Property<string>("Country");

                            b1.Property<string>("EmailAddress");

                            b1.Property<string>("FirstName");

                            b1.Property<string>("LastName");

                            b1.Property<string>("PhoneNo");

                            b1.Property<string>("State");

                            b1.Property<string>("ZipCode");

                            b1.HasKey("OrderId");

                            b1.ToTable("Order");

                            b1.HasOne("AspnetRun.Core.Entities.Order")
                                .WithOne("BillingAddress")
                                .HasForeignKey("AspnetRun.Core.Entities.Address", "OrderId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("AspnetRun.Core.Entities.Address", "ShippingAddress", b1 =>
                        {
                            b1.Property<int>("OrderId");

                            b1.Property<string>("AddressLine");

                            b1.Property<string>("City");

                            b1.Property<string>("CompanyName");

                            b1.Property<string>("Country");

                            b1.Property<string>("EmailAddress");

                            b1.Property<string>("FirstName");

                            b1.Property<string>("LastName");

                            b1.Property<string>("PhoneNo");

                            b1.Property<string>("State");

                            b1.Property<string>("ZipCode");

                            b1.HasKey("OrderId");

                            b1.ToTable("Address");

                            b1.HasOne("AspnetRun.Core.Entities.Order")
                                .WithOne("ShippingAddress")
                                .HasForeignKey("AspnetRun.Core.Entities.Address", "OrderId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("AspnetRun.Core.Entities.OrderItem", b =>
                {
                    b.HasOne("AspnetRun.Core.Entities.Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId");

                    b.HasOne("AspnetRun.Core.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AspnetRun.Core.Entities.Product", b =>
                {
                    b.HasOne("AspnetRun.Core.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AspnetRun.Core.Entities.ProductCompare", b =>
                {
                    b.HasOne("AspnetRun.Core.Entities.Compare", "Compare")
                        .WithMany("ProductCompares")
                        .HasForeignKey("CompareId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AspnetRun.Core.Entities.Product", "Product")
                        .WithMany("ProductCompares")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AspnetRun.Core.Entities.ProductList", b =>
                {
                    b.HasOne("AspnetRun.Core.Entities.List", "List")
                        .WithMany("ProductLists")
                        .HasForeignKey("ListId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AspnetRun.Core.Entities.Product", "Product")
                        .WithMany("ProductLists")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AspnetRun.Core.Entities.ProductWishlist", b =>
                {
                    b.HasOne("AspnetRun.Core.Entities.Product", "Product")
                        .WithMany("ProductWishlists")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AspnetRun.Core.Entities.Wishlist", "Wishlist")
                        .WithMany("ProductWishlists")
                        .HasForeignKey("WishlistId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AspnetRun.Core.Entities.Review", b =>
                {
                    b.HasOne("AspnetRun.Core.Entities.Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("AspnetRun.Core.Entities.Specification", b =>
                {
                    b.HasOne("AspnetRun.Core.Entities.Product")
                        .WithMany("Specifications")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("AspnetRun.Core.Entities.Tag", b =>
                {
                    b.HasOne("AspnetRun.Core.Entities.Product")
                        .WithMany("Tags")
                        .HasForeignKey("ProductId");
                });
#pragma warning restore 612, 618
        }
    }
}
